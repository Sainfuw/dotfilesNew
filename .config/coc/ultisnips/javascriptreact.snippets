# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet rfn "Description"
import React from 'react';
import {View, StyleSheet, Text} from 'react-native';

export const ${TM_FILENAME_BASE} = () => {
	return (
		<View>
			<Text>${TM_FILENAME_BASE}</Text>
		</View>
	);
};

const styles = StyleSheet.create({})
endsnippet

snippet testing "Description"
import "@testing-library/jest-dom";
import { shallow } from "enzyme";

describe("Pruebas en ${TM_FILENAME_BASE}", () => {
	test("${0}", () => {

	});
});
endsnippet

snippet test "Description"
test("${0}", () => {

});
endsnippet

snippet rfc "Description"
import React from 'react';

export const ${TM_FILENAME_BASE} = () => {
	return (
		<>
			<h4>${TM_FILENAME_BASE}</h4>
		</>
	);
};
endsnippet

snippet imr "Import component"
import { ${0} } from "./${0}";
endsnippet

snippet sheet "StyleSheet"
const styles = StyleSheet.create({
	${0}
})
endsnippet

# React Hooks
snippet useS "useContext Hook" b
const [${1}, set${1:state}] = useState()
endsnippet

snippet useE "useEffect Hook" b
useEffect(() => {
	${1:${0}}
		}${2})
endsnippet

snippet useC "useContext Hook" b
const ${1:context} = useContext(${2})
endsnippet

snippet useRe "useReducer Hook" b
const [${3:state}, ${4:dispatch}] = useReducer(${5:reducer}, ${2:initial_value})
endsnippet

snippet useCB "useCallback(fn, inputs)" b
const ${1:callback} = useCallback((${2})) => ${3:{
	${4}
}}, [${5}])
endsnippet

snippet useM "useMemo(fn, inputs)" b
const ${1:memorized} = useMemo(() => ${2:{
	${3}
}}, [${4}])
endsnippet

snippet useR "useRef(defaultValue)" b
const ${1:ref} = useRef(${2:null})
endsnippet

snippet imr "Import react" b
import React from 'react';
endsnippet
